--- systemd-44.orig/src/login/71-seat.rules
+++ systemd-44/src/login/71-seat.rules
@@ -11,6 +11,7 @@ TAG=="uaccess", SUBSYSTEM!="sound", TAG+
 SUBSYSTEM=="sound", KERNEL=="card*", TAG+="seat"
 SUBSYSTEM=="input", KERNEL=="input*", TAG+="seat"
 SUBSYSTEM=="graphics", KERNEL=="fb[0-9]*", TAG+="seat"
+SUBSYSTEM=="graphics", KERNEL=="fb[0-9]*", TAG+="seat-master"
 SUBSYSTEM=="usb", ATTR{bDeviceClass}=="09", TAG+="seat"
 
 # 'Plugable' USB hub, sound, network, graphics adapter
--- systemd-44.orig/src/login/logind.c
+++ systemd-44/src/login/logind.c
@@ -331,11 +331,7 @@ int manager_enumerate_devices(Manager *m
                 goto finish;
         }
 
-        r = udev_enumerate_add_match_subsystem(e, "graphics");
-        if (r < 0)
-                goto finish;
-
-        r = udev_enumerate_add_match_tag(e, "seat");
+        r = udev_enumerate_add_match_tag(e, "seat-master");
         if (r < 0)
                 goto finish;
 
@@ -979,11 +975,7 @@ static int manager_connect_udev(Manager
         if (!m->udev_seat_monitor)
                 return -ENOMEM;
 
-        r = udev_monitor_filter_add_match_tag(m->udev_seat_monitor, "seat");
-        if (r < 0)
-                return r;
-
-        r = udev_monitor_filter_add_match_subsystem_devtype(m->udev_seat_monitor, "graphics", NULL);
+        r = udev_monitor_filter_add_match_tag(m->udev_seat_monitor, "seat-master");
         if (r < 0)
                 return r;
 
--- systemd-44.orig/src/login/multi-seat-x.c
+++ systemd-44/src/login/multi-seat-x.c
@@ -34,6 +34,7 @@ int main(int argc, char *argv[]) {
         int i;
         const char *seat = NULL;
         char **new_argv;
+        int new_argc;
         char *path = NULL, *device_node = NULL;
         int r;
         FILE *f = NULL;
@@ -107,10 +108,7 @@ int main(int argc, char *argv[]) {
                         break;
         }
 
-        if (!device_node) {
-                log_error("Failed to find device node for seat %s.", seat);
-                goto fail;
-        }
+        if (device_node) {
 
         r = safe_mkdir("/run/systemd/multi-session-x", 0755, 0, 0);
         if (r < 0) {
@@ -156,15 +154,19 @@ int main(int argc, char *argv[]) {
 
         fclose(f);
         f = NULL;
+        }
 
         new_argv = alloca(sizeof(char*) * (argc + 3 + 1));
         memcpy(new_argv, argv, sizeof(char*) * (argc + 2 + 1));
 
+        new_argc = argc;
         new_argv[0] = (char*) X_SERVER;
-        new_argv[argc+0] = (char*) "-config";
-        new_argv[argc+1] = path;
-        new_argv[argc+2] = (char*) "-sharevts";
-        new_argv[argc+3] = NULL;
+        if (device_node) {
+            new_argv[new_argc ++] = (char*) "-config";
+            new_argv[new_argc ++] = path;
+        }
+        new_argv[new_argc ++] = (char*) "-sharevts";
+        new_argv[new_argc] = NULL;
 
         udev_enumerate_unref(enumerator);
         enumerator = NULL;
@@ -172,8 +174,10 @@ int main(int argc, char *argv[]) {
         udev_unref(udev);
         udev = NULL;
 
-        free(device_node);
-        device_node = NULL;
+        if (device_node) {
+            free(device_node);
+            device_node = NULL;
+        }
 
         execv(X_SERVER, new_argv);
         log_error("Failed to execute real X server: %m");
